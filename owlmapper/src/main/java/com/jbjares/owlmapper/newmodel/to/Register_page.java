package com.jbjares.owlmapper.newmodel.to;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Register_page <br>
 * @version generated on Sun Jan 11 02:43:59 GMT 2015 by jbjares
 */

public interface Register_page extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#registerPageOf
     */
     
    /**
     * Gets all property values for the register_page_of property.<p>
     * 
     * @returns a collection of values for the register_page_of property.
     */
    Collection<? extends Event> getRegister_page_of();

    /**
     * Checks if the class has a register_page_of property value.<p>
     * 
     * @return true if there is a register_page_of property value.
     */
    boolean hasRegister_page_of();

    /**
     * Adds a register_page_of property value.<p>
     * 
     * @param newRegister_page_of the register_page_of property value to be added
     */
    void addRegister_page_of(Event newRegister_page_of);

    /**
     * Removes a register_page_of property value.<p>
     * 
     * @param oldRegister_page_of the register_page_of property value to be removed.
     */
    void removeRegister_page_of(Event oldRegister_page_of);


    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#signedBy
     */
     
    /**
     * Gets all property values for the signed_by property.<p>
     * 
     * @returns a collection of values for the signed_by property.
     */
    Collection<? extends Person> getSigned_by();

    /**
     * Checks if the class has a signed_by property value.<p>
     * 
     * @return true if there is a signed_by property value.
     */
    boolean hasSigned_by();

    /**
     * Adds a signed_by property value.<p>
     * 
     * @param newSigned_by the signed_by property value to be added
     */
    void addSigned_by(Person newSigned_by);

    /**
     * Removes a signed_by property value.<p>
     * 
     * @param oldSigned_by the signed_by property value to be removed.
     */
    void removeSigned_by(Person oldSigned_by);


    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#StampNum
     */
     
    /**
     * Gets all property values for the stamp_number property.<p>
     * 
     * @returns a collection of values for the stamp_number property.
     */
    Collection<? extends Object> getStamp_number();

    /**
     * Checks if the class has a stamp_number property value.<p>
     * 
     * @return true if there is a stamp_number property value.
     */
    boolean hasStamp_number();

    /**
     * Adds a stamp_number property value.<p>
     * 
     * @param newStamp_number the stamp_number property value to be added
     */
    void addStamp_number(Object newStamp_number);

    /**
     * Removes a stamp_number property value.<p>
     * 
     * @param oldStamp_number the stamp_number property value to be removed.
     */
    void removeStamp_number(Object oldStamp_number);



    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#datePageCertified
     */
     
    /**
     * Gets all property values for the date_of_page_certified property.<p>
     * 
     * @returns a collection of values for the date_of_page_certified property.
     */
    Collection<? extends Object> getDate_of_page_certified();

    /**
     * Checks if the class has a date_of_page_certified property value.<p>
     * 
     * @return true if there is a date_of_page_certified property value.
     */
    boolean hasDate_of_page_certified();

    /**
     * Adds a date_of_page_certified property value.<p>
     * 
     * @param newDate_of_page_certified the date_of_page_certified property value to be added
     */
    void addDate_of_page_certified(Object newDate_of_page_certified);

    /**
     * Removes a date_of_page_certified property value.<p>
     * 
     * @param oldDate_of_page_certified the date_of_page_certified property value to be removed.
     */
    void removeDate_of_page_certified(Object oldDate_of_page_certified);



    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#datePageCertifiedAsTrueCopy
     */
     
    /**
     * Gets all property values for the date_of_page_certified_as_TrueCopy property.<p>
     * 
     * @returns a collection of values for the date_of_page_certified_as_TrueCopy property.
     */
    Collection<? extends Object> getDate_of_page_certified_as_TrueCopy();

    /**
     * Checks if the class has a date_of_page_certified_as_TrueCopy property value.<p>
     * 
     * @return true if there is a date_of_page_certified_as_TrueCopy property value.
     */
    boolean hasDate_of_page_certified_as_TrueCopy();

    /**
     * Adds a date_of_page_certified_as_TrueCopy property value.<p>
     * 
     * @param newDate_of_page_certified_as_TrueCopy the date_of_page_certified_as_TrueCopy property value to be added
     */
    void addDate_of_page_certified_as_TrueCopy(Object newDate_of_page_certified_as_TrueCopy);

    /**
     * Removes a date_of_page_certified_as_TrueCopy property value.<p>
     * 
     * @param oldDate_of_page_certified_as_TrueCopy the date_of_page_certified_as_TrueCopy property value to be removed.
     */
    void removeDate_of_page_certified_as_TrueCopy(Object oldDate_of_page_certified_as_TrueCopy);



    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#quarter
     */
     
    /**
     * Gets all property values for the quarter property.<p>
     * 
     * @returns a collection of values for the quarter property.
     */
    Collection<? extends Object> getQuarter();

    /**
     * Checks if the class has a quarter property value.<p>
     * 
     * @return true if there is a quarter property value.
     */
    boolean hasQuarter();

    /**
     * Adds a quarter property value.<p>
     * 
     * @param newQuarter the quarter property value to be added
     */
    void addQuarter(Object newQuarter);

    /**
     * Removes a quarter property value.<p>
     * 
     * @param oldQuarter the quarter property value to be removed.
     */
    void removeQuarter(Object oldQuarter);



    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#union
     */
     
    /**
     * Gets all property values for the union property.<p>
     * 
     * @returns a collection of values for the union property.
     */
    Collection<? extends Object> getUnion();

    /**
     * Checks if the class has a union property value.<p>
     * 
     * @return true if there is a union property value.
     */
    boolean hasUnion();

    /**
     * Adds a union property value.<p>
     * 
     * @param newUnion the union property value to be added
     */
    void addUnion(Object newUnion);

    /**
     * Removes a union property value.<p>
     * 
     * @param oldUnion the union property value to be removed.
     */
    void removeUnion(Object oldUnion);



    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#volume
     */
     
    /**
     * Gets all property values for the volume property.<p>
     * 
     * @returns a collection of values for the volume property.
     */
    Collection<? extends Object> getVolume();

    /**
     * Checks if the class has a volume property value.<p>
     * 
     * @return true if there is a volume property value.
     */
    boolean hasVolume();

    /**
     * Adds a volume property value.<p>
     * 
     * @param newVolume the volume property value to be added
     */
    void addVolume(Object newVolume);

    /**
     * Removes a volume property value.<p>
     * 
     * @param oldVolume the volume property value to be removed.
     */
    void removeVolume(Object oldVolume);



    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#yearRegistered
     */
     
    /**
     * Gets all property values for the year_registered property.<p>
     * 
     * @returns a collection of values for the year_registered property.
     */
    Collection<? extends Object> getYear_registered();

    /**
     * Checks if the class has a year_registered property value.<p>
     * 
     * @return true if there is a year_registered property value.
     */
    boolean hasYear_registered();

    /**
     * Adds a year_registered property value.<p>
     * 
     * @param newYear_registered the year_registered property value to be added
     */
    void addYear_registered(Object newYear_registered);

    /**
     * Removes a year_registered property value.<p>
     * 
     * @param oldYear_registered the year_registered property value to be removed.
     */
    void removeYear_registered(Object oldYear_registered);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
