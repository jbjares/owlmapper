package com.jbjares.owlmapper.newmodel.to.impl;

import com.jbjares.owlmapper.newmodel.to.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultRegister_page <br>
 * @version generated on Sun Jan 11 02:43:59 GMT 2015 by jbjares
 */
public class DefaultRegister_page extends WrappedIndividualImpl implements Register_page {

    public DefaultRegister_page(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.IRLontologies.ie/historicalEvents.owl#registerPageOf
     */
     
    public Collection<? extends Event> getRegister_page_of() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_REGISTER_PAGE_OF,
                                               DefaultEvent.class);
    }

    public boolean hasRegister_page_of() {
	   return !getRegister_page_of().isEmpty();
    }

    public void addRegister_page_of(Event newRegister_page_of) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_REGISTER_PAGE_OF,
                                       newRegister_page_of);
    }

    public void removeRegister_page_of(Event oldRegister_page_of) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_REGISTER_PAGE_OF,
                                          oldRegister_page_of);
    }


    /* ***************************************************
     * Object Property http://www.IRLontologies.ie/historicalEvents.owl#signedBy
     */
     
    public Collection<? extends Person> getSigned_by() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_SIGNED_BY,
                                               DefaultPerson.class);
    }

    public boolean hasSigned_by() {
	   return !getSigned_by().isEmpty();
    }

    public void addSigned_by(Person newSigned_by) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_SIGNED_BY,
                                       newSigned_by);
    }

    public void removeSigned_by(Person oldSigned_by) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_SIGNED_BY,
                                          oldSigned_by);
    }


    /* ***************************************************
     * Data Property http://www.IRLontologies.ie/historicalEvents.owl#StampNum
     */
     
    public Collection<? extends Object> getStamp_number() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STAMP_NUMBER, Object.class);
    }

    public boolean hasStamp_number() {
		return !getStamp_number().isEmpty();
    }

    public void addStamp_number(Object newStamp_number) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STAMP_NUMBER, newStamp_number);
    }

    public void removeStamp_number(Object oldStamp_number) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_STAMP_NUMBER, oldStamp_number);
    }


    /* ***************************************************
     * Data Property http://www.IRLontologies.ie/historicalEvents.owl#datePageCertified
     */
     
    public Collection<? extends Object> getDate_of_page_certified() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DATE_OF_PAGE_CERTIFIED, Object.class);
    }

    public boolean hasDate_of_page_certified() {
		return !getDate_of_page_certified().isEmpty();
    }

    public void addDate_of_page_certified(Object newDate_of_page_certified) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DATE_OF_PAGE_CERTIFIED, newDate_of_page_certified);
    }

    public void removeDate_of_page_certified(Object oldDate_of_page_certified) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DATE_OF_PAGE_CERTIFIED, oldDate_of_page_certified);
    }


    /* ***************************************************
     * Data Property http://www.IRLontologies.ie/historicalEvents.owl#datePageCertifiedAsTrueCopy
     */
     
    public Collection<? extends Object> getDate_of_page_certified_as_TrueCopy() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DATE_OF_PAGE_CERTIFIED_AS_TRUECOPY, Object.class);
    }

    public boolean hasDate_of_page_certified_as_TrueCopy() {
		return !getDate_of_page_certified_as_TrueCopy().isEmpty();
    }

    public void addDate_of_page_certified_as_TrueCopy(Object newDate_of_page_certified_as_TrueCopy) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DATE_OF_PAGE_CERTIFIED_AS_TRUECOPY, newDate_of_page_certified_as_TrueCopy);
    }

    public void removeDate_of_page_certified_as_TrueCopy(Object oldDate_of_page_certified_as_TrueCopy) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DATE_OF_PAGE_CERTIFIED_AS_TRUECOPY, oldDate_of_page_certified_as_TrueCopy);
    }


    /* ***************************************************
     * Data Property http://www.IRLontologies.ie/historicalEvents.owl#quarter
     */
     
    public Collection<? extends Object> getQuarter() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_QUARTER, Object.class);
    }

    public boolean hasQuarter() {
		return !getQuarter().isEmpty();
    }

    public void addQuarter(Object newQuarter) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_QUARTER, newQuarter);
    }

    public void removeQuarter(Object oldQuarter) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_QUARTER, oldQuarter);
    }


    /* ***************************************************
     * Data Property http://www.IRLontologies.ie/historicalEvents.owl#union
     */
     
    public Collection<? extends Object> getUnion() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_UNION, Object.class);
    }

    public boolean hasUnion() {
		return !getUnion().isEmpty();
    }

    public void addUnion(Object newUnion) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_UNION, newUnion);
    }

    public void removeUnion(Object oldUnion) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_UNION, oldUnion);
    }


    /* ***************************************************
     * Data Property http://www.IRLontologies.ie/historicalEvents.owl#volume
     */
     
    public Collection<? extends Object> getVolume() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_VOLUME, Object.class);
    }

    public boolean hasVolume() {
		return !getVolume().isEmpty();
    }

    public void addVolume(Object newVolume) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_VOLUME, newVolume);
    }

    public void removeVolume(Object oldVolume) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_VOLUME, oldVolume);
    }


    /* ***************************************************
     * Data Property http://www.IRLontologies.ie/historicalEvents.owl#yearRegistered
     */
     
    public Collection<? extends Object> getYear_registered() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_YEAR_REGISTERED, Object.class);
    }

    public boolean hasYear_registered() {
		return !getYear_registered().isEmpty();
    }

    public void addYear_registered(Object newYear_registered) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_YEAR_REGISTERED, newYear_registered);
    }

    public void removeYear_registered(Object oldYear_registered) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_YEAR_REGISTERED, oldYear_registered);
    }


}
