package com.jbjares.owlmapper.newmodel.to;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Birth_event <br>
 * @version generated on Sun Jan 11 02:43:59 GMT 2015 by jbjares
 */

public interface Birth_event extends Event {

    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#hasCounty
     */
     
    /**
     * Gets all property values for the has_county property.<p>
     * 
     * @returns a collection of values for the has_county property.
     */
    Collection<? extends Place> getHas_county();

    /**
     * Checks if the class has a has_county property value.<p>
     * 
     * @return true if there is a has_county property value.
     */
    boolean hasHas_county();

    /**
     * Adds a has_county property value.<p>
     * 
     * @param newHas_county the has_county property value to be added
     */
    void addHas_county(Place newHas_county);

    /**
     * Removes a has_county property value.<p>
     * 
     * @param oldHas_county the has_county property value to be removed.
     */
    void removeHas_county(Place oldHas_county);


    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#hasInformant_
     */
     
    /**
     * Gets all property values for the has_informant_ property.<p>
     * 
     * @returns a collection of values for the has_informant_ property.
     */
    Collection<? extends Person> getHas_informant_();

    /**
     * Checks if the class has a has_informant_ property value.<p>
     * 
     * @return true if there is a has_informant_ property value.
     */
    boolean hasHas_informant_();

    /**
     * Adds a has_informant_ property value.<p>
     * 
     * @param newHas_informant_ the has_informant_ property value to be added
     */
    void addHas_informant_(Person newHas_informant_);

    /**
     * Removes a has_informant_ property value.<p>
     * 
     * @param oldHas_informant_ the has_informant_ property value to be removed.
     */
    void removeHas_informant_(Person oldHas_informant_);


    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#hasRegisterPage
     */
     
    /**
     * Gets all property values for the has_register_page property.<p>
     * 
     * @returns a collection of values for the has_register_page property.
     */
    Collection<? extends Register_page> getHas_register_page();

    /**
     * Checks if the class has a has_register_page property value.<p>
     * 
     * @return true if there is a has_register_page property value.
     */
    boolean hasHas_register_page();

    /**
     * Adds a has_register_page property value.<p>
     * 
     * @param newHas_register_page the has_register_page property value to be added
     */
    void addHas_register_page(Register_page newHas_register_page);

    /**
     * Removes a has_register_page property value.<p>
     * 
     * @param oldHas_register_page the has_register_page property value to be removed.
     */
    void removeHas_register_page(Register_page oldHas_register_page);


    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#registeredBy
     */
     
    /**
     * Gets all property values for the registered_by property.<p>
     * 
     * @returns a collection of values for the registered_by property.
     */
    Collection<? extends Person> getRegistered_by();

    /**
     * Checks if the class has a registered_by property value.<p>
     * 
     * @return true if there is a registered_by property value.
     */
    boolean hasRegistered_by();

    /**
     * Adds a registered_by property value.<p>
     * 
     * @param newRegistered_by the registered_by property value to be added
     */
    void addRegistered_by(Person newRegistered_by);

    /**
     * Removes a registered_by property value.<p>
     * 
     * @param oldRegistered_by the registered_by property value to be removed.
     */
    void removeRegistered_by(Person oldRegistered_by);


    /* ***************************************************
     * Property http://www.IRLontologies.ie/personOntology.owl#OWLObjectPropertyImpl_01420721646860402000
     */
     
    /**
     * Gets all property values for the has_district property.<p>
     * 
     * @returns a collection of values for the has_district property.
     */
    Collection<? extends District> getHas_district();

    /**
     * Checks if the class has a has_district property value.<p>
     * 
     * @return true if there is a has_district property value.
     */
    boolean hasHas_district();

    /**
     * Adds a has_district property value.<p>
     * 
     * @param newHas_district the has_district property value to be added
     */
    void addHas_district(District newHas_district);

    /**
     * Removes a has_district property value.<p>
     * 
     * @param oldHas_district the has_district property value to be removed.
     */
    void removeHas_district(District oldHas_district);


    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#InformantQualification
     */
     
    /**
     * Gets all property values for the qualification_of_informant property.<p>
     * 
     * @returns a collection of values for the qualification_of_informant property.
     */
    Collection<? extends Object> getQualification_of_informant();

    /**
     * Checks if the class has a qualification_of_informant property value.<p>
     * 
     * @return true if there is a qualification_of_informant property value.
     */
    boolean hasQualification_of_informant();

    /**
     * Adds a qualification_of_informant property value.<p>
     * 
     * @param newQualification_of_informant the qualification_of_informant property value to be added
     */
    void addQualification_of_informant(Object newQualification_of_informant);

    /**
     * Removes a qualification_of_informant property value.<p>
     * 
     * @param oldQualification_of_informant the qualification_of_informant property value to be removed.
     */
    void removeQualification_of_informant(Object oldQualification_of_informant);



    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#dateOfRegistration
     */
     
    /**
     * Gets all property values for the date_of_registration property.<p>
     * 
     * @returns a collection of values for the date_of_registration property.
     */
    Collection<? extends Object> getDate_of_registration();

    /**
     * Checks if the class has a date_of_registration property value.<p>
     * 
     * @return true if there is a date_of_registration property value.
     */
    boolean hasDate_of_registration();

    /**
     * Adds a date_of_registration property value.<p>
     * 
     * @param newDate_of_registration the date_of_registration property value to be added
     */
    void addDate_of_registration(Object newDate_of_registration);

    /**
     * Removes a date_of_registration property value.<p>
     * 
     * @param oldDate_of_registration the date_of_registration property value to be removed.
     */
    void removeDate_of_registration(Object oldDate_of_registration);



    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#deathCertification
     */
     
    /**
     * Gets all property values for the with_death_certification_status property.<p>
     * 
     * @returns a collection of values for the with_death_certification_status property.
     */
    Collection<? extends Object> getWith_death_certification_status();

    /**
     * Checks if the class has a with_death_certification_status property value.<p>
     * 
     * @return true if there is a with_death_certification_status property value.
     */
    boolean hasWith_death_certification_status();

    /**
     * Adds a with_death_certification_status property value.<p>
     * 
     * @param newWith_death_certification_status the with_death_certification_status property value to be added
     */
    void addWith_death_certification_status(Object newWith_death_certification_status);

    /**
     * Removes a with_death_certification_status property value.<p>
     * 
     * @param oldWith_death_certification_status the with_death_certification_status property value to be removed.
     */
    void removeWith_death_certification_status(Object oldWith_death_certification_status);



    /* ***************************************************
     * Property http://www.IRLontologies.ie/historicalEvents.owl#placeOfDeath
     */
     
    /**
     * Gets all property values for the place_of_death property.<p>
     * 
     * @returns a collection of values for the place_of_death property.
     */
    Collection<? extends Object> getPlace_of_death();

    /**
     * Checks if the class has a place_of_death property value.<p>
     * 
     * @return true if there is a place_of_death property value.
     */
    boolean hasPlace_of_death();

    /**
     * Adds a place_of_death property value.<p>
     * 
     * @param newPlace_of_death the place_of_death property value to be added
     */
    void addPlace_of_death(Object newPlace_of_death);

    /**
     * Removes a place_of_death property value.<p>
     * 
     * @param oldPlace_of_death the place_of_death property value to be removed.
     */
    void removePlace_of_death(Object oldPlace_of_death);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
